#!/bin/bash
## _____________________________________________________________________________
##
## Copyright (c) 2013 Jorge Garrido <zgbjgg@gmail.com>.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 3. Neither the name of copyright holders nor the names of its
##    contributors may be used to endorse or promote products derived
##    from this software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
## TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
## PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL COPYRIGHT HOLDERS OR CONTRIBUTORS
## BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.
##
## _____________________________________________________________________________ 
##
## [ zgbjgg ]
##           
## @author zgbjgg@gmail.com
## @copyright 2013 Jorge Garrido
#
#
## variable settings
%%LOCAL_DIR%%
tmp=tmp
cookie=rehc
%%ERL%%
node=rehc
hostname=`hostname -s`


# make a remote procedure call to erlang node
# to use this function, send three parameters.
# first -> send the module name
# second -> send the function of module name
# third -> send the args to function, it closed in brackets  
rpc_stop () {
        $erl -noshell -sname $tmp -setcookie $cookie -eval 'rpc:call('"$node"'@'"$hostname"', '"$1"', '"$2"', '"$3"')' -s init stop
}
# make a remote procedure call to erlang node and stop it 
# to use this function, send three parameters.
# first -> send the module name
# second -> send the function of module name
# third -> send the args to function, it closed in brackets  
rpc() {
	$erl -noshell -sname $tmp -setcookie $cookie -eval 'rpc:call('"$node"'@'"$hostname"', '"$1"', '"$2"', '"$3"')'
}

## if the first argument is not provided
[ "$#" -eq 0 ] && echo "Try 'rehc help' for more information" && exit 1

## To each case: start | stop | console | load-avg | show-apps | cluster | help 
## start: enter to Makefile previously generated, target start
## stop: kill the process id
## console: enter to Makefile previously generated, target console 
## load-avg: load average of a remote host
## show-apps: show apps configured for remote hosts 
## cluster: show info about clustered hosts
## help: prints info about rehc
if [ $1 = 'start' -a "$#" -eq 1 ]
        then
                make -C $LOCAL_DIR start
elif [ $1 = 'stop' -a "$#" -eq 2 ]
        then
                kill -9 $2
elif [ $1 = 'console' -a "$#" -eq 1 ]
        then
                make -C $LOCAL_DIR console
elif [ $1 = 'load-avg' -a "$#" -eq 2 ]
        then
                rpc rehc_clt show_loadavg [\"$2\"]
elif [ $1 = 'show-apps' -a "$#" -eq 1 ]
        then
                rpc_stop rehc_clt show_apps []
elif [ $1 = 'cluster' -a "$#" -eq 1 ]
        then
                rpc_stop rehc_clt cluster []
elif [ $1 = 'help' -a "$#" -eq 1 ]
        then
                man $LOCAL_DIR/.man/./rehc
else
        echo "Try 'rehc help' for more information"
fi
