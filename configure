#! /bin/bash
#
## _____________________________________________________________________________
##
## Copyright (c) 2013 Jorge Garrido <zgbjgg@gmail.com>.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in the
##    documentation and/or other materials provided with the distribution.
## 3. Neither the name of copyright holders nor the names of its
##    contributors may be used to endorse or promote products derived
##    from this software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
## TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
## PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL COPYRIGHT HOLDERS OR CONTRIBUTORS
## BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
## POSSIBILITY OF SUCH DAMAGE.
##
## _____________________________________________________________________________ 
##
## [ zgbjgg ]
##           
## @author zgbjgg@gmail.com
## @copyright 2013 Jorge Garrido
##

## stdout
## set -x

## variables definition 
DEPS=( ssh-agent ssh sed awk which erl run_erl to_erl git rebar )
ON_FAIL="nok"
ON_SUCCED="ok"
RUN_USER_COMMANDS=()
MAKEFILE=Makefile

## check if dependencie is installed and available for the user
## if the dependencie is available, then return ok 
## if the dependencie is unavailable, then return nok
checking() {
	if ! which $1 > /dev/null 2>&1; then
		echo $ON_FAIL
	else
		echo $ON_SUCCED
	fi
}

## Get based distro for checking how the installation could be done
distro() {
	if [ -f /etc/debian_version ]; then
    		DISTRO=Debian
	elif [ -f /etc/redhat-release ]; then
    		DISTRO=RedHat
	else
    		DISTRO=$(uname -s)
	fi

	echo $DISTRO	
}

## append the path to the dependencie in the array, these paths
## will be used for create appropiate Makefile for the run user
for DEP in "${DEPS[@]}"; do
	echo -ne "checking for $DEP....."
	STAT=$( checking $DEP )
	if [ $STAT = $ON_FAIL ]; then
		echo -e "no\nfor checking $DEP, please install"
		exit 1
		break
	else
		echo "yes"
		USER_COMMAND=$(command -v $DEP)
		RUN_USER_COMMANDS=( "${RUN_USER_COMMANDS[@]}" "$USER_COMMAND" )	
	fi
done

DISTRO=$( distro )
echo "checking for distro.....$DISTRO"

## Download misultin & web api applications
if [ -d "$pwd/deps/misultin" ]; then
	echo "dependencies.....yes"
else
	mkdir -p deps
	cd deps
	echo "downloading dependencies....."
	git clone https://github.com/jorgegarrido/misultin.git > /dev/null
	cd ..
fi


## variables to append in the Makefile for the run user
## variables for this script contain the variable name and value of the
## variable used in the Makefile
RUN_ERL=RUN_ERL:=${RUN_USER_COMMANDS[6]}
TO_ERL=TO_ERL:=${RUN_USER_COMMANDS[7]}
ERL=ERL:=${RUN_USER_COMMANDS[5]}
EBIN_DIR=EBIN_DIR:=$(pwd)/ebin
DEPS_DIR=DEPS:=$(pwd)/deps/*
ARGS_FILE=ARGS_FILE:=$(pwd)/etc/vm.args
CONFIG_FILE=CONFIG_FILE:=$(pwd)/etc/rehc.config
LOGS_DIR=LOGS_DIR:=/tmp/$(pwd)/logs/
PIPES_DIR=PIPES_DIR:=/tmp/$(pwd)/pipes/
LOCAL_DIR=LOCAL_DIR:=$(pwd)

## user environment for the Makefile creation, created as an array
USER_ENVIRONMENT=( "4i$RUN_ERL" "4i$TO_ERL" "4i$ERL" "4i$EBIN_DIR" "4i$DEPS_DIR" "4i$ARGS_FILE" 
		   "4i$CONFIG_FILE" "4i$LOGS_DIR" "4i$PIPES_DIR" "4i$LOCAL_DIR" )
## check if the run_user_commands is the same as dependencies (array lenght) 
## then create the Makefile and append the missing headers (variables on array)
## use the template for Makefile, Makefile.in which contains all definition for target 
## rules
HEADER='# Makefile.  Generated from Makefile.in by configure.'
HEADER_C='# Copyright (c) 2012 Jorge Garrido <jorge.garrido@morelosoft.com>.'
if [ ${#RUN_USER_COMMANDS[*]} = ${#DEPS[*]} ]
	then
		## when is ready to create Makefile
		echo -e "creating makefile....."
		rm -rf $MAKEFILE
		echo $HEADER >> $MAKEFILE
		echo $HEADER_C >> $MAKEFILE
		echo "" >> $MAKEFILE
		## create appropiate makefile for the user
		while read lw
		do
			if [[ $lw == -TARGET* ]];
			then
				A_T=${lw#-TARGET=*}
				TARGET=${A_T%-DEPENDENCIES=*}
				A_D=${A_T#*-DEPENDENCIES=}
				DEPENDENCIES=${A_D%-COMMANDS*}
				
				echo $TARGET: $DEPENDENCIES >> $MAKEFILE
			elif [[ $lw == %%* ]];
			then
				echo "" >> $MAKEFILE
			elif [[ $lw == ">" ]];
			then
				echo "" >> $MAKEFILE
			else
				echo -e "\t$lw" >> $MAKEFILE
			fi				  
		done < "$MAKEFILE.in"	
		for X in "${USER_ENVIRONMENT[@]}"; do
			sed -i $X $MAKEFILE  
		done
		sed -i 's/<//g' $MAKEFILE
                sed -i 's/>//g' $MAKEFILE
	        
		## some string replaced
                sed -i 's/;/;\'\\\\n\\t'/g' $MAKEFILE	
		
		echo -ne "do you want install rehc as service? [y/N]: "
                read OPT
                if [ $OPT = "y" ];
                then
                       	sed -i "s/?//g" $MAKEFILE
			case $DISTRO in
			"RedHat") 
				sed -i '87,87d' $MAKEFILE
				sed -i '93,93d' $MAKEFILE
				;;
			"Debian")
				sed -i '84,86d' $MAKEFILE
				sed -i '89,91d' $MAKEFILE
				;;
			"Darwin")
				## installation just run from this directory
				echo "Not supported $DISTRO for installation"
				sed -i '84,87d' $MAKEFILE
                        	sed -i '87,90d' $MAKEFILE
				;; 
			*)	
				echo "Not supported $DISTRO for installation"
                        	sed -i '84,87d' $MAKEFILE
                        	sed -i '87,90d' $MAKEFILE
				;;
			esac
                elif [ $OPT = "N" ];
		then
                        echo "ignore as service....."
			sed -i '84,87d' $MAKEFILE	
			sed -i '87,90d' $MAKEFILE
                else 
			echo "option not supported...."
			rm -rf $MAKEFILE 
		fi
		echo "done" 
else
	## when nothing to do for make
	echo "nothing to do for make"
fi
