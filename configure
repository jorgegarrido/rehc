#! /bin/bash
#
#    rehc: remote erlang host control    
#    Copyright (C) 2013  Jorge Garrido <jorge.garrido@morelosoft.com> [zgbjgg]
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
## variables definition 
DEPS=( ssh-agent ssh erl run_erl to_erl git rebar )
ON_FAIL="nok"
ON_SUCCED="ok"
RUN_USER_COMMANDS=()
MAKEFILE=Makefile

## check if dependencie is installed and available for the user
## if the dependencie is available, then return ok 
## if the dependencie is unavailable, then return nok
checking() {
	if ! which $1 > /dev/null 2>&1; then
		echo $ON_FAIL
	else
		echo $ON_SUCCED
	fi
}
## append the path to the dependencie in the array, these paths
## will be used for create appropiate Makefile for the run user
for DEP in "${DEPS[@]}"; do
	echo -ne "checking for $DEP....."
	STAT=$( checking $DEP )
	if [ $STAT = $ON_FAIL ]; then
		echo -e "no\nfor checking $DEP, please install"
		break
	else
		echo "yes"
		USER_COMMAND=$(command -v $DEP)
		RUN_USER_COMMANDS=( "${RUN_USER_COMMANDS[@]}" "$USER_COMMAND" )	
	fi
done

## Download misultin & web api applications
mkdir -p deps
cd deps
# git clone https://github.com/jorgegarrido/rehc_api.git
echo "downloading dependencies....."
git clone https://github.com/ostinelli/misultin.git > /dev/null
cd ..


## variables to append in the Makefile for the run user
## variables for this script contain the variable name and value of the
## variable used in the Makefile
RUN_ERL=RUN_ERL:=${RUN_USER_COMMANDS[3]}
TO_ERL=TO_ERL:=${RUN_USER_COMMANDS[4]}
ERL=ERL:=${RUN_USER_COMMANDS[2]}
EBIN_DIR=EBIN_DIR:=$(pwd)/ebin
DEPS_DIR=DEPS:=$(pwd)/deps/misultin/ebin
ARGS_FILE=ARGS_FILE:=$(pwd)/etc/vm.args
CONFIG_FILE=CONFIG_FILE:=$(pwd)/etc/rehc.config
LOGS_DIR=LOGS_DIR:=$(pwd)/logs/
PIPES_DIR=PIPES_DIR:=$(pwd)/pipes/
LOCAL_DIR=LOCAL_DIR:=$(pwd)

## user environment for the Makefile creation, created as an array
USER_ENVIRONMENT=( "4i$RUN_ERL" "4i$TO_ERL" "4i$ERL" "4i$EBIN_DIR" "4i$DEPS_DIR" "4i$ARGS_FILE" 
		   "4i$CONFIG_FILE" "4i$LOGS_DIR" "4i$PIPES_DIR" "4i$LOCAL_DIR" )
## check if the run_user_commands is the same as dependencies (array lenght) 
## then create the Makefile and append the missing headers (variables on array)
## use the template for Makefile, Makefile.in which contains all definition for target 
## rules
HEADER='# Makefile.  Generated from Makefile.in by configure.'
HEADER_C='# Copyright (c) 2012 Jorge Garrido <jorge.garrido@morelosoft.com>.'
if [ ${#RUN_USER_COMMANDS[*]} = ${#DEPS[*]} ]
	then
		## when is ready to create Makefile
		echo -e "creating makefile....."
		rm -rf $MAKEFILE
		echo $HEADER >> $MAKEFILE
		echo $HEADER_C >> $MAKEFILE
		echo "" >> $MAKEFILE
		## create appropiate makefile for the user
		while read lw
		do
			if [[ $lw == -TARGET* ]];
			then
				A_T=${lw#-TARGET=*}
				TARGET=${A_T%-DEPENDENCIES=*}
				A_D=${A_T#*-DEPENDENCIES=}
				DEPENDENCIES=${A_D%-COMMANDS*}
				
				echo $TARGET: $DEPENDENCIES >> $MAKEFILE
			elif [[ $lw == %%* ]];
			then
				echo "" >> $MAKEFILE
			elif [[ $lw == ">" ]];
			then
				echo "" >> $MAKEFILE
			else
				echo -e "\t$lw" >> $MAKEFILE
			fi				  
		done < "$MAKEFILE.in"	
		for X in "${USER_ENVIRONMENT[@]}"; do
			sed -i $X $MAKEFILE  
		done
		sed -i 's/<//g' $MAKEFILE
                sed -i 's/>//g' $MAKEFILE
		echo -ne "do you want install rehc as service? [y/N]: "
                read OPT
                if [ $OPT = "y" ];
                then
                        sed -i "s/?//g" $MAKEFILE
                else
                        echo "ignore as service....."
			sed -i '51,59d' $MAKEFILE
                fi
		## some string replaced
		sed -i 's/;/;\'\\\\n\\t'/g' $MAKEFILE
		echo "done" 
else
	## when nothing to do for make
	echo "nothing to do for make"
fi
